---
- name: copy router certs to masters
  copy:
    src: "{{ item }}"
    dest: /etc/origin/master/named_certificates/
  with_items:
  - "{{ ossr_default_router_certs }}"
  - "{{ ossr_default_router_keys }}"
  - "{{ ossr_default_router_cacert }}"

- name: create routers
  oadm_router:
    name: "{{ item.0.name }}"
    service_account: router
    replicas: "{{ item.0.replicas | default(2) }}"
    namespace: default
    selector: type=infra
    ports: "{{ item.0.listeners | default(ossr_default_listeners) | ossr_create_port_list() }}"
    stats_port: "{{ item.0.stats_port | default(omit) }}"
    images: "registry.ops.openshift.com/openshift3/ose-${component}:${version}"
    cert_file: "/etc/origin/master/named_certificates/{{ item.1 | basename }}"
    key_file: "/etc/origin/master/named_certificates/{{ item.2 | basename }}"
    cacert_file: "/etc/origin/master/named_certificates/{{ ossr_default_router_cacert | basename }}"
    edits: "{{ item.0.router_edits | default([]) | union(ossr_default_router_edits) }}"
  with_together:
  - "{{ ossr_routers }}" # item.0
  - "{{ ossr_default_router_certs }}" # item.1
  - "{{ ossr_default_router_keys }}" # item.2
  register: router_out
  run_once: True

- debug:
    var: router_out
  run_once: true

# This is the fix for https://bugzilla.redhat.com/show_bug.cgi?id=1312292
- name: Make sure bad SSL certs won't break the routers
  oc_env:
    state: present
    kind: dc
    name: router
    namespace: default
    env_vars:
      EXTENDED_VALIDATION: 'true'
  run_once: True

